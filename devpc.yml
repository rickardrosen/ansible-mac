---

- hosts: localhost
  connection: local
  tasks:

    - name: create .config-directory
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ ansible_user_dir }}/.config"
        - "{{ ansible_user_dir }}/.config/iterm2"

    - name: install homebrew
      shell: '/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
      register: gethomebrew_result
      changed_when: "'up-to-date' not in gethomebrew_result.stdout"

    - name: setup homebrew cask
      homebrew_tap:
        name: homebrew/cask
        state: present

    - name: brew cask apps ftw
      homebrew_cask:
        name: "{{ item }}"
        state: latest
      loop:
        - google-chrome
        - spotify
        - iterm2
        - firefox
        - slack
        - visual-studio-code
        - lastpass
    
    - name: homebrew apps ftw!
      homebrew:
        name: "{{ item }}"
        state: latest
      loop:
        - go
        - httpie
        - git
        - zsh
        - zsh-syntax-highlighting
        - jq
    
    - name: disable natural scroll
      osx_defaults:
        key: com.apple.swipescrolldirection
        type: bool
        value: "{{ i_am_a_pilot | default(false) }}"

    - name: finder set enable
      osx_defaults:
        domain: com.apple.finder
        key: "{{ item }}"
        type: bool
        value: true
      with_items:
        - ShowStatusBar
        - ShowPathbar
        - ShowTabView
        - AppleShowAllFiles
        - _FXShowPosixPathInTitle
        - QLEnableTextSelection

    - name: disable siri
      osx_defaults:
        domain: "{{ item.domain }}"
        key: "{{ item.key }}"
        type: bool
        value: "{{ item.value }}"
      loop:
        - { domain: "com.apple.Siri", key: "Disabled", value: true }
        - { domain: "com.apple.Siri", key: "UserHasDeclinedEnable", value: true }
        - { domain: "com.apple.Siri", key: "StatusMenuVisible", value: false }
        - { domain: "com.apple.assistant.support", key: "Assistant Enabled", value: false }

    - name: set defaults for Control Strip (will always overwrite current config as of now..)
      shell: cat files/controlstrip.plist | defaults import - ~/Library/Preferences/com.apple.controlstrip.plist && killall ControlStrip
      
    - name: 'get "oh my zsh"'
      shell: sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      register: getohmyzsh_result
      changed_when: "'You already have Oh My Zsh installed' not in getohmyzsh_result.stdout"

    - name: template out .zshrc
      template:
        src: templates/zshrc.j2
        dest: ~/.zshrc

    - name: get the iterm2 fonts and color themes
      get_url: 
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
      loop:
        - {url: "https://raw.githubusercontent.com/powerline/fonts/master/SourceCodePro/Source%20Code%20Pro%20for%20Powerline.otf", dest: "~/Library/Fonts/Source Code Pro for Powerline.ttf"}
        - {url: "https://raw.githubusercontent.com/powerline/fonts/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf", dest: "~/Library/Fonts/Meslo LG M Regular for Powerline.ttf"}
        - {url: "https://raw.githubusercontent.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Dark.itermcolors", dest: "{{ ansible_user_dir }}/.config/iterm2/Solarized Dark.itermcolors"}
        - {url: "https://raw.githubusercontent.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Light.itermcolors", dest: "{{ ansible_user_dir }}/.config/iterm2/Solarized Light.itermcolors"}

    - name: set iTerm2 to load config from files
      osx_defaults:
        domain: com.googlecode.iterm2
        key: LoadPrefsFromCustomFolder
        type: bool
        value: true

    - name: set the folder for iTerm2 to load config from
      osx_defaults:
        domain: com.googlecode.iterm2
        key: PrefsCustomFolder
        type: string
        value: "{{ ansible_user_dir }}/.config/iterm2"        

    - name: template out iTerm2 config
      template:
        src: templates/com.googlecode.iterm2.plist.j2
        dest: "{{ ansible_user_dir }}/.config/iterm2/com.googlecode.iterm2.plist"

